// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model user {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  name        String
  password    String
  isDeleted   Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  UserSession UserSession[]
  teacher     teacher[]
}

model UserSession {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      user      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  token     String
  createdAt DateTime  @default(now())
  expiresAt DateTime?
  tempOTP   tempOTP[]
}

model tempOTP {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  otp           Int
  UserSession   UserSession @relation(fields: [UserSessionId], references: [id])
  UserSessionId String      @db.ObjectId
  otpRef        String
  createdAt     DateTime    @default(now())
  expiresAt     DateTime?
}

model teacher {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String
  password        String
  isDeleted       Boolean     @default(false)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user            user        @relation(fields: [favoriteStudent], references: [id])
  favoriteStudent String      @db.ObjectId
  timeTable       timeTable[]
}

model timeTable {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  teacher   teacher  @relation(fields: [teacherId], references: [id])
  teacherId String   @db.ObjectId
  day       String
  time      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
